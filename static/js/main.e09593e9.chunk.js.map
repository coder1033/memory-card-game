{"version":3,"sources":["images/cherrybomb.png","images/chomper.png","images/fumeshroom.png","images/hypnoshroom.png","images/kernelpult.png","images/magnetshroom.png","images/melonpult.png","images/peapod.png","images/peashooter.png","images/snowpea.png","images/sporeshroom.png","images/sunflower.png","images/sunshroom.png","images/tallnut.png","images/torchwood.png","images/wintermelon.png","reshuffle/reshuffle.js","components/all-cards.js","components/header-content.js","components/game-over.js","App.js","cards-data/cards-data.js","reportWebVitals.js","index.js"],"names":["reshuffle","cards","temp","n","length","r","Math","floor","random","AllCards","props","cards_url","att","style","cursor","className","width","onClick","id","onClickCard","Container","Row","Col","Image","src","alt","HeaderContent","Navbar","variant","bg","Brand","href","Text","score","high_score","GameOver","onRestart","Modal","show","game_over","onHide","backdrop","centered","Header","closeButton","Title","Body","your_score","Footer","Button","App","useState","0","cherry","1","chomper","2","fumeshroom","3","hypnoshroom","4","kernelpult","5","magnetshroom","6","melonpult","7","peapod","8","peashooter","9","snowpea","10","sporeshroom","11","sunflower","12","sunshroom","13","tallnut","14","torchwood","15","wintermelon","Array","from","keys","setCards","setScore","parseInt","localStorage","setHighScore","selected","setSelected","setGameOver","useEffect","setItem","card","prevSelected","prevCards","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e09593e9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cherrybomb.5d2b591e.png\";","export default __webpack_public_path__ + \"static/media/chomper.6e5161b3.png\";","export default __webpack_public_path__ + \"static/media/fumeshroom.f9c4c91a.png\";","export default __webpack_public_path__ + \"static/media/hypnoshroom.b9550fb2.png\";","export default __webpack_public_path__ + \"static/media/kernelpult.267d27d0.png\";","export default __webpack_public_path__ + \"static/media/magnetshroom.cf29529f.png\";","export default __webpack_public_path__ + \"static/media/melonpult.9656af24.png\";","export default __webpack_public_path__ + \"static/media/peapod.bcfbaab2.png\";","export default __webpack_public_path__ + \"static/media/peashooter.1febbbc9.png\";","export default __webpack_public_path__ + \"static/media/snowpea.f78380ca.png\";","export default __webpack_public_path__ + \"static/media/sporeshroom.635c6107.png\";","export default __webpack_public_path__ + \"static/media/sunflower.927c104a.png\";","export default __webpack_public_path__ + \"static/media/sunshroom.8e601b1d.png\";","export default __webpack_public_path__ + \"static/media/tallnut.7ed143ca.png\";","export default __webpack_public_path__ + \"static/media/torchwood.36269107.png\";","export default __webpack_public_path__ + \"static/media/wintermelon.961c1e63.png\";","const reshuffle = (cards) => {\r\n    let n = cards.length, temp;\r\n    while(n){\r\n        let r = Math.floor(Math.random() * n--);\r\n        \r\n        temp = cards[r];\r\n        cards[r] = cards[n];\r\n        cards[n] = temp;\r\n    }\r\n    return cards\r\n};\r\n\r\nexport default reshuffle;","import {Image, Row, Col, Container} from 'react-bootstrap'\r\nimport \"./all-cards.css\"\r\n\r\nconst AllCards = (props) => {\r\n\r\n    let cards = props.cards;\r\n    let cards_url = props.cards_url\r\n    let att = {style:{cursor:\"pointer\"}, className:\"img-thumbnail\", width:\"200\" };\r\n    const onClick = (id) => {\r\n        props.onClickCard(id);\r\n    }\r\n    return (\r\n        <Container className=\"w-100\">\r\n        <Row className=\"row-spacing no-gutters\">\r\n        <Col><Image {...att} src={cards_url[cards[0]]} alt=\"...\" onClick={()=>onClick(cards[0])} /></Col>\r\n        <Col><Image {...att} src={cards_url[cards[1]]} alt=\"...\" onClick={()=>onClick(cards[1])} /></Col>\r\n        <Col><Image {...att} src={cards_url[cards[2]]} alt=\"...\" onClick={()=>onClick(cards[2])} /></Col>\r\n        <Col><Image {...att} src={cards_url[cards[3]]} alt=\"...\" onClick={()=>onClick(cards[3])} /></Col>\r\n        </Row>\r\n        <Row className=\"row-spacing no-gutters\">\r\n        <Col><Image {...att} src={cards_url[cards[4]]} alt=\"...\" onClick={()=>onClick(cards[4])} /></Col>\r\n        <Col><Image {...att} src={cards_url[cards[5]]} alt=\"...\" onClick={()=>onClick(cards[5])} /></Col>\r\n        <Col><Image {...att} src={cards_url[cards[6]]} alt=\"...\" onClick={()=>onClick(cards[6])} /></Col>\r\n        <Col><Image {...att} src={cards_url[cards[7]]} alt=\"...\" onClick={()=>onClick(cards[7])} /></Col>\r\n        </Row>\r\n        <Row className=\"row-spacing no-gutters\">\r\n        <Col><Image {...att} src={cards_url[cards[8]]} alt=\"...\" onClick={()=>onClick(cards[8])} /></Col>\r\n        <Col><Image {...att} src={cards_url[cards[9]]} alt=\"...\" onClick={()=>onClick(cards[9])} /></Col>\r\n        <Col><Image {...att} src={cards_url[cards[10]]} alt=\"...\" onClick={()=>onClick(cards[10])} /></Col>\r\n        <Col><Image {...att} src={cards_url[cards[11]]} alt=\"...\" onClick={()=>onClick(cards[11])} /></Col>\r\n        </Row>\r\n        <Row className=\"row-spacing no-gutters\">\r\n        <Col><Image {...att} src={cards_url[cards[12]]} alt=\"...\" onClick={()=>onClick(cards[12])} /></Col>\r\n        <Col><Image {...att} src={cards_url[cards[13]]} alt=\"...\" onClick={()=>onClick(cards[13])} /></Col>\r\n        <Col><Image {...att} src={cards_url[cards[14]]} alt=\"...\" onClick={()=>onClick(cards[14])} /></Col>\r\n        <Col><Image {...att} src={cards_url[cards[15]]} alt=\"...\" onClick={()=>onClick(cards[15])} /></Col>\r\n        </Row>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default AllCards;","import {Navbar} from 'react-bootstrap';\r\n\r\nconst HeaderContent = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <Navbar className=\"justify-content-center\" variant=\"dark\" bg=\"dark\">\r\n                <Navbar.Brand href=\"#\" className=\"pt-0\"><h1 className=\"m-0 h2 font-weight-normal\">Memory Game</h1></Navbar.Brand>\r\n            </Navbar>\r\n            <Navbar className=\"justify-content-center p-0 mb-3 sticky-top\" variant=\"secondary\" bg=\"light\">            \r\n                <Navbar.Text className=\"mr-2\">\r\n                Your Score - <span className=\"text-primary\">{props.score}</span>\r\n                </Navbar.Text>\r\n                <Navbar.Text className=\"ml-2\">\r\n                High Score - <span className=\"text-danger\">{props.high_score}</span>\r\n                </Navbar.Text>\r\n            </Navbar>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default HeaderContent;","import {Button, Modal, Row, Col} from 'react-bootstrap';\r\nconst GameOver = (props) => {\r\n\r\n    const onClick = () => {\r\n        props.onRestart();\r\n    }\r\n\r\n    return (\r\n        <Modal show={props.game_over} onHide={onClick} backdrop=\"static\" centered>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Game Over</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <p>You just clicked a card twice</p>\r\n            <Row>\r\n                <Col className=\"text-muted justify-content-left\">Your Score - {props.your_score}</Col>\r\n                <Col className=\"text-muted justify-content-right\" >High Score - {props.high_score}</Col>\r\n            </Row>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={onClick}>\r\n                Restart\r\n            </Button>\r\n            </Modal.Footer>\r\n      </Modal>\r\n    )\r\n};\r\n\r\n\r\nexport default GameOver;","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { cardsId, cardsUrl } from \"./cards-data/cards-data.js\";\nimport reshuffle from \"./reshuffle/reshuffle.js\";\nimport AllCards from \"./components/all-cards.js\";\nimport HeaderContent from \"./components/header-content.js\";\nimport GameOver from \"./components/game-over.js\"\n\nconst App = () => {\n  const [cards_url] = useState(cardsUrl());\n  const [cards, setCards] = useState(reshuffle(cardsId()));\n  const [score, setScore] = useState(0);\n  const [high_score, setHighScore] = useState(parseInt(localStorage.high_score));\n  const [selected, setSelected] = useState({});\n  const [game_over, setGameOver] = useState(false);\n\n  useEffect(\n    () => {\n      if (high_score < score){\n        localStorage.setItem(\"high_score\", high_score + 1);\n        setHighScore(high_score + 1)\n      };\n    },\n    [score, high_score]\n  );\n\n  const onClickCard = (card) => {\n    if (selected[card]) {\n      setSelected((prevSelected) => {\n        return {};\n      });\n      setGameOver(true);\n      return;\n    }\n\n    setSelected((prevSelected) => ({\n      ...prevSelected,\n      [card]: true,\n    }));\n\n    setScore(score + 1);\n\n    setCards((prevCards) => reshuffle([...prevCards]));\n  };\n\n  const onRestart = () => {\n    setScore(0);\n    setGameOver(false);\n  };\n\n  return (\n    <div>\n      <GameOver onRestart={onRestart} your_score={score} high_score={high_score} game_over={game_over}/>\n      <HeaderContent score={score} high_score={high_score}/>\n      <AllCards onClickCard={onClickCard} cards={cards} cards_url={cards_url} />\n    </div>\n  );\n};\n\nexport default App;\n","import cherry from \"../images/cherrybomb.png\";\r\nimport chomper from \"../images/chomper.png\";\r\nimport fumeshroom from \"../images/fumeshroom.png\";\r\nimport hypnoshroom from \"../images/hypnoshroom.png\";\r\nimport kernelpult from \"../images/kernelpult.png\";\r\nimport magnetshroom from \"../images/magnetshroom.png\";\r\nimport melonpult from \"../images/melonpult.png\";\r\nimport peapod from \"../images/peapod.png\";\r\nimport peashooter from \"../images/peashooter.png\";\r\nimport snowpea from \"../images/snowpea.png\";\r\nimport sporeshroom from \"../images/sporeshroom.png\";\r\nimport sunflower from \"../images/sunflower.png\";\r\nimport sunshroom from \"../images/sunshroom.png\";\r\nimport tallnut from \"../images/tallnut.png\";\r\nimport torchwood from \"../images/torchwood.png\";\r\nimport wintermelon from \"../images/wintermelon.png\";\r\n\r\n\r\nconst cardsId = () => Array.from(Array(16).keys());\r\n\r\nconst cardsUrl = () => {\r\n  return {\r\n    0: cherry,\r\n    1: chomper,\r\n    2: fumeshroom,\r\n    3: hypnoshroom,\r\n    4: kernelpult,\r\n    5: magnetshroom,\r\n    6: melonpult,\r\n    7: peapod,\r\n    8: peashooter,\r\n    9: snowpea,\r\n    10: sporeshroom,\r\n    11: sunflower,\r\n    12: sunshroom,\r\n    13: tallnut,\r\n    14: torchwood,\r\n    15: wintermelon,\r\n  };\r\n};\r\n\r\nexport { cardsId, cardsUrl };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nif(!localStorage.high_score){\n  localStorage.setItem(\"high_score\", 0);\n}\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}