{"version":3,"sources":["images/cherrybomb.png","images/chomper.png","images/fumeshroom.png","images/hypnoshroom.png","images/kernelpult.png","images/magnetshroom.png","images/melonpult.png","images/peapod.png","images/peashooter.png","images/snowpea.png","images/sporeshroom.png","images/sunflower.png","images/sunshroom.png","images/tallnut.png","images/torchwood.png","images/wintermelon.png","reshuffle/reshuffle.js","components/all-cards.js","components/header-content.js","components/game-over.js","components/footer.js","app.js","cards-data/cards-data.js","report-web-vitals.js","index.js"],"names":["reshuffle","cards","temp","n","length","r","Math","floor","random","AllCards","props","cards_url","att","style","cursor","className","width","onClick","id","onClickCard","Container","Row","Col","Image","src","alt","HeaderContent","Navbar","variant","bg","Brand","href","Text","score","high_score","GameOver","onRestart","Modal","show","game_over","onHide","backdrop","centered","Header","closeButton","Title","Body","your_score","Footer","Button","about_game","Popover","as","Content","rel","target","OverlayTrigger","placement","delay","hide","overlay","color","App","useState","0","cherry","1","chomper","2","fumeshroom","3","hypnoshroom","4","kernelpult","5","magnetshroom","6","melonpult","7","peapod","8","peashooter","9","snowpea","10","sporeshroom","11","sunflower","12","sunshroom","13","tallnut","14","torchwood","15","wintermelon","Array","from","keys","setCards","setScore","parseInt","localStorage","setHighScore","selected","setSelected","setGameOver","useEffect","setItem","card","prevSelected","prevCards","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47038d76.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cherrybomb.5d2b591e.png\";","export default __webpack_public_path__ + \"static/media/chomper.6e5161b3.png\";","export default __webpack_public_path__ + \"static/media/fumeshroom.f9c4c91a.png\";","export default __webpack_public_path__ + \"static/media/hypnoshroom.b9550fb2.png\";","export default __webpack_public_path__ + \"static/media/kernelpult.267d27d0.png\";","export default __webpack_public_path__ + \"static/media/magnetshroom.cf29529f.png\";","export default __webpack_public_path__ + \"static/media/melonpult.9656af24.png\";","export default __webpack_public_path__ + \"static/media/peapod.bcfbaab2.png\";","export default __webpack_public_path__ + \"static/media/peashooter.1febbbc9.png\";","export default __webpack_public_path__ + \"static/media/snowpea.f78380ca.png\";","export default __webpack_public_path__ + \"static/media/sporeshroom.635c6107.png\";","export default __webpack_public_path__ + \"static/media/sunflower.927c104a.png\";","export default __webpack_public_path__ + \"static/media/sunshroom.8e601b1d.png\";","export default __webpack_public_path__ + \"static/media/tallnut.7ed143ca.png\";","export default __webpack_public_path__ + \"static/media/torchwood.36269107.png\";","export default __webpack_public_path__ + \"static/media/wintermelon.961c1e63.png\";","const reshuffle = (cards) => {\r\n  let n = cards.length,\r\n    temp;\r\n  while (n) {\r\n    let r = Math.floor(Math.random() * n--);\r\n\r\n    temp = cards[r];\r\n    cards[r] = cards[n];\r\n    cards[n] = temp;\r\n  }\r\n  return cards;\r\n};\r\n\r\nexport default reshuffle;\r\n","import { Image, Row, Col, Container } from \"react-bootstrap\";\r\nimport \"./all-cards.css\";\r\n\r\nconst AllCards = (props) => {\r\n  let cards = props.cards;\r\n  let cards_url = props.cards_url;\r\n  let att = {\r\n    style: { cursor: \"pointer\" },\r\n    className: \"img-thumbnail\",\r\n    width: \"200\",\r\n  };\r\n  const onClick = (id) => {\r\n    props.onClickCard(id);\r\n  };\r\n  return (\r\n    <Container className=\"w-100\">\r\n      <Row className=\"row-spacing no-gutters\">\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[0]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[0])}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[1]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[1])}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[2]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[2])}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[3]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[3])}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"row-spacing no-gutters\">\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[4]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[4])}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[5]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[5])}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[6]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[6])}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[7]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[7])}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"row-spacing no-gutters\">\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[8]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[8])}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[9]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[9])}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[10]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[10])}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[11]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[11])}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"row-spacing no-gutters\">\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[12]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[12])}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[13]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[13])}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[14]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[14])}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Image\r\n            {...att}\r\n            src={cards_url[cards[15]]}\r\n            alt=\"...\"\r\n            onClick={() => onClick(cards[15])}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AllCards;\r\n","import { Navbar } from \"react-bootstrap\";\r\n\r\nconst HeaderContent = (props) => {\r\n  return (\r\n    <>\r\n      <Navbar className=\"justify-content-center\" variant=\"dark\" bg=\"dark\">\r\n        <Navbar.Brand href=\"#\" className=\"pt-0\">\r\n          <h1 className=\"m-0 h2 font-weight-normal\">Memory Game</h1>\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n      <Navbar\r\n        className=\"justify-content-center p-0 mb-1\"\r\n        variant=\"secondary\"\r\n        bg=\"light\"\r\n      >\r\n        <Navbar.Text className=\"mr-2\">\r\n          Your Score - <span className=\"text-primary\">{props.score}</span>\r\n        </Navbar.Text>\r\n        <Navbar.Text className=\"ml-2\">\r\n          High Score - <span className=\"text-danger\">{props.high_score}</span>\r\n        </Navbar.Text>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderContent;\r\n","import { Button, Modal, Row, Col } from \"react-bootstrap\";\r\nconst GameOver = (props) => {\r\n  const onClick = () => {\r\n    props.onRestart();\r\n  };\r\n\r\n  return (\r\n    <Modal show={props.game_over} onHide={onClick} backdrop=\"static\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Game Over</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>You just clicked a card twice</p>\r\n        <Row>\r\n          <Col className=\"text-muted justify-content-left\">\r\n            Your Score - {props.your_score}\r\n          </Col>\r\n          <Col className=\"text-muted justify-content-right\">\r\n            High Score - {props.high_score}\r\n          </Col>\r\n        </Row>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" onClick={onClick}>\r\n          Restart\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import { Navbar, OverlayTrigger, Popover } from \"react-bootstrap\";\r\nimport { AiFillGithub, AiOutlineQuestionCircle } from \"react-icons/ai\";\r\n\r\nconst about_game = (\r\n  <Popover id=\"popover-basic\">\r\n    <Popover.Title as=\"h3\">About Game</Popover.Title>\r\n    <Popover.Content>\r\n      It's simple, you click a card twice game ends.\r\n    </Popover.Content>\r\n  </Popover>\r\n);\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar\r\n      className=\"fixed-bottom justify-content-center p-0\"\r\n      variant=\"light\"\r\n      bg=\"light\"\r\n    >\r\n      <Navbar.Text className=\"mr-2\">\r\n        <a\r\n          rel=\"noreferrer\"\r\n          target=\"_blank\"\r\n          href=\"https://github.com/coder1033/memory-card-game\"\r\n        >\r\n          <AiFillGithub />\r\n        </a>\r\n      </Navbar.Text>\r\n      <Navbar.Text className=\"ml-2\">\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 1000 }} overlay={about_game}>\r\n          <AiOutlineQuestionCircle color=\"black\" cursor=\"pointer\" />\r\n        </OverlayTrigger>\r\n      </Navbar.Text>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import \"./app.css\";\nimport { useEffect, useState } from \"react\";\nimport { cardsId, cardsUrl } from \"./cards-data/cards-data.js\";\nimport reshuffle from \"./reshuffle/reshuffle.js\";\nimport AllCards from \"./components/all-cards.js\";\nimport HeaderContent from \"./components/header-content.js\";\nimport GameOver from \"./components/game-over.js\";\nimport Footer from \"./components/footer.js\";\n\nconst App = () => {\n  const [cards_url] = useState(cardsUrl());\n  const [cards, setCards] = useState(reshuffle(cardsId()));\n  const [score, setScore] = useState(0);\n  const [high_score, setHighScore] = useState(\n    parseInt(localStorage.high_score)\n  );\n  const [selected, setSelected] = useState({});\n  const [game_over, setGameOver] = useState(false);\n\n  useEffect(() => {\n    if (high_score < score) {\n      localStorage.setItem(\"high_score\", high_score + 1);\n      setHighScore(high_score + 1);\n    }\n  }, [score, high_score]);\n\n  const onClickCard = (card) => {\n    if (selected[card]) {\n      setSelected((prevSelected) => {\n        return {};\n      });\n      setGameOver(true);\n      return;\n    }\n\n    setSelected((prevSelected) => ({\n      ...prevSelected,\n      [card]: true,\n    }));\n\n    setScore(score + 1);\n\n    setCards((prevCards) => reshuffle([...prevCards]));\n  };\n\n  const onRestart = () => {\n    setScore(0);\n    setGameOver(false);\n  };\n\n  return (\n    <div>\n      <GameOver\n        onRestart={onRestart}\n        your_score={score}\n        high_score={high_score}\n        game_over={game_over}\n      />\n      <HeaderContent score={score} high_score={high_score} />\n      <AllCards onClickCard={onClickCard} cards={cards} cards_url={cards_url} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import cherry from \"../images/cherrybomb.png\";\r\nimport chomper from \"../images/chomper.png\";\r\nimport fumeshroom from \"../images/fumeshroom.png\";\r\nimport hypnoshroom from \"../images/hypnoshroom.png\";\r\nimport kernelpult from \"../images/kernelpult.png\";\r\nimport magnetshroom from \"../images/magnetshroom.png\";\r\nimport melonpult from \"../images/melonpult.png\";\r\nimport peapod from \"../images/peapod.png\";\r\nimport peashooter from \"../images/peashooter.png\";\r\nimport snowpea from \"../images/snowpea.png\";\r\nimport sporeshroom from \"../images/sporeshroom.png\";\r\nimport sunflower from \"../images/sunflower.png\";\r\nimport sunshroom from \"../images/sunshroom.png\";\r\nimport tallnut from \"../images/tallnut.png\";\r\nimport torchwood from \"../images/torchwood.png\";\r\nimport wintermelon from \"../images/wintermelon.png\";\r\n\r\nconst cardsId = () => Array.from(Array(16).keys());\r\n\r\nconst cardsUrl = () => {\r\n  return {\r\n    0: cherry,\r\n    1: chomper,\r\n    2: fumeshroom,\r\n    3: hypnoshroom,\r\n    4: kernelpult,\r\n    5: magnetshroom,\r\n    6: melonpult,\r\n    7: peapod,\r\n    8: peashooter,\r\n    9: snowpea,\r\n    10: sporeshroom,\r\n    11: sunflower,\r\n    12: sunshroom,\r\n    13: tallnut,\r\n    14: torchwood,\r\n    15: wintermelon,\r\n  };\r\n};\r\n\r\nexport { cardsId, cardsUrl };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport reportWebVitals from \"./report-web-vitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nif (!localStorage.high_score) {\n  localStorage.setItem(\"high_score\", 0);\n}\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}